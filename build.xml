<?xml version="1.0" encoding="UTF-8" ?>
<project name="ManoWars" basedir="." default="build">
    <property name="dir-build" value="./build" />
    <property name="dir-tests" value="./tests" />
    <property name="dir-tests-logs" value="./tests/_reports" />
    <property name="dir-logs" value="./build/logs" />
    <property name="dir-app" value="./libs/MW" />
    
    <!-- ======================== -->
    <!-- = (Default) Build Task = -->
    <!-- ======================== -->
    <target name="build">
        <phingcall target="clean"></phingcall>
        <phingcall target="structure"></phingcall>
        <phingcall target="composer"></phingcall>
        <phingcall target="makedist"></phingcall>
        <phingcall target="phpunit"></phingcall>
        <phingcall target="metrics"></phingcall>
        <!-- <phingcall target="phpdoc"></phingcall> -->
    </target>
    
    <!-- ============== -->
    <!-- = Clean Task = -->
    <!-- ============== -->
    <target name="clean">
        <echo msg="Cleaning build directories ..." />
        <delete dir="${dir-build}" />
        <echo msg="Cleaning unit tests results ..." />
        <delete>
        	<fileset dir="${dir-tests}/_reports/">
        		<include name="**/*.php" />
        	</fileset>
        </delete>
    </target>

    
    <!-- ========== -->
    <!-- = Composer = -->
    <!-- ========== -->
    <target name="composer">
        <echo msg="Running composer install ..." />
        <exec command="composer install" logoutput="true" escape="false" />
    </target>
    
    <!-- ========== -->
    <!-- = PHPDoc = -->
    <!-- ========== -->
    <target name="phpdoc">
        <phpdoc2 title="API Documentation"
          destdir="${dir-build}/docs">
           <fileset dir="${dir-app}">
                <include name="**/*.php" />
            </fileset>
        </phpdoc2>
    </target>
    
    <!-- ========================== -->
    <!-- = Make distribution Task = -->
    <!-- ========================== -->
    <target name="makedist">
        <echo msg="Moving files to distribution directory ..." />
        <copy todir="${dir-build}/dist/">
            <fileset dir=".">
                <exclude name="build/**" />
                <exclude name="tests/**" />
                <exclude name="composer**" />
                <exclude name="phpunit**" />
                <include name="**" />
            </fileset>
        </copy>
        <tar destfile="${dir-build}/dist.tar.gz" compression="gzip">
            <fileset dir="${dir-build}/dist">
                <include name="**" />
            </fileset>
        </tar>
    </target>
    
    <!-- ================== -->
    <!-- = Structure Task = -->
    <!-- ================== -->
    <target name="structure">
        <echo msg="Creating structure ..." />
        <mkdir dir="${dir-build}" />
        <mkdir dir="${dir-build}/docs" />
        <mkdir dir="${dir-logs}" />
        <mkdir dir="${dir-build}/dist" />
    </target>
    
    <!-- ================ -->
    <!-- = PHPUnit Task = -->
    <!-- ================ -->
    <target name="phpunit">
        <echo msg="Running unit tests in ${dir-tests} ..." />
        <exec command="vendor/bin/phpunit" logoutput="true" escape="false" />
        <copy todir="${dir-logs}">
        	<fileset dir="${dir-tests-logs}">
        	    <include name="**" />
        	</fileset>
        </copy>
    </target>
    
    <!-- ================ -->
    <!-- = Metrics Task = -->
    <!-- ================ -->
    <target name="metrics">
        <echo msg="Running metrics tools ..." />
        
        <echo msg="# PHPCPD ..." />
        <exec command="vendor/bin/phpcpd --log-pmd ${dir-logs}/cpd.xml ${dir-app}" logoutput="true" escape="false" />
        
        <echo msg="# PDepend ..." />
        <exec command="vendor/bin/pdepend -d memory_limit=1G --jdepend-xml=${dir-logs}/jdepend.xml --summary-xml=${dir-logs}/jdepend-summary.xml --jdepend-chart=${dir-logs}/jdepend.svg --overview-pyramid=${dir-logs}/jdepend-pyramid.svg ${dir-app}" logoutput="true" escape="false" />
        
        <echo msg="# PHP Code Sniffer ..." />
        <exec command="vendor/bin/phpcs --standard=Zend -p -s --report-full=${dir-tests-logs}/codesniffer-full.txt --report-summary=${dir-tests-logs}/codesniffer-summary.txt --report-xml=${dir-tests-logs}/codesniffer.xml --report-checkstyle=${dir-tests-logs}/codesniffer-checkstyle.xml --report-gitblame=${dir-tests-logs}/codesniffer-gitblame.txt init.php ${dir-app}" logoutput="true" escape="false" />
        
        <echo msg="# PHP Mess Detector ..." />
        <exec command="vendor/bin/phpmd ${dir-app} text cleancode,codesize,controversial,design,naming,unusedcode --reportfile ${dir-tests-logs}/phpmd.txt" logoutput="true" escape="false" />
    </target>
</project>